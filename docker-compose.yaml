services:
  postgres:
    image: postgres:15-alpine
    container_name: weather-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-mcp_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mcp_pass}
      POSTGRES_DB: ${POSTGRES_DB:-weather_mcp}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-mcp_user} -d ${POSTGRES_DB:-weather_mcp}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: weather-cache
    ports:
      - "6379:6379"
    networks:
      - mcp-network

  mcp-server:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: weather-mcp-server
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-mcp_user}:${POSTGRES_PASSWORD:-mcp_pass}@postgres:5432/${POSTGRES_DB:-weather_mcp}
      - REDIS_URL=redis://redis:6379
      - WEATHER_API_KEY=${WEATHER_API_KEY}
      - PORT=${PORT:-3000}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    volumes:
      - ./logs:/app/logs
    networks:
      - mcp-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  mcp-network:
    driver: bridge